var search_data = {"index":{"searchIndex":["experiment","client","config","user","variant","==()","as_json()","fetch()","init()","new()","new()","new()","new()","to_json()","readme"],"longSearchIndex":["experiment","experiment::client","experiment::config","experiment::user","experiment::variant","experiment::variant#==()","experiment::user#as_json()","experiment::client#fetch()","experiment::init()","experiment::client::new()","experiment::config::new()","experiment::user::new()","experiment::variant::new()","experiment::user#to_json()",""],"info":[["Experiment","","Experiment.html","","<p>Amplitude Experiment Module\n<p>Provides factory methods for storing singleton instance of Client\n"],["Experiment::Client","","Experiment/Client.html","","<p>Main client for fetching variant data.\n"],["Experiment::Config","","Experiment/Config.html","","<p>Configuration\n"],["Experiment::User","","Experiment/User.html","","<p>Defines a user context for evaluation. ‘device_id` and `user_id` are used for identity resolution. All …\n"],["Experiment::Variant","","Experiment/Variant.html","","<p>Variant\n"],["==","Experiment::Variant","Experiment/Variant.html#method-i-3D-3D","(other)","<p>@param [Variant] other\n"],["as_json","Experiment::User","Experiment/User.html#method-i-as_json","(_options = {})",""],["fetch","Experiment::Client","Experiment/Client.html#method-i-fetch","(user, &callback)","<p>Fetch all variants for a user.\n<p>This method will automatically retry if configured (default). @param [User] …\n"],["init","Experiment","Experiment.html#method-c-init","(api_key, config = nil)","<p>Initializes a singleton Client.\n<p>@param [String] api_key The environment API Key @param [Config] config …\n"],["new","Experiment::Client","Experiment/Client.html#method-c-new","(api_key, config = nil)","<p>Creates a new Experiment Client instance.\n<p>@param [String] api_key The environment API Key @param [Config] …\n"],["new","Experiment::Config","Experiment/Config.html#method-c-new","(debug: false, server_url: DEFAULT_SERVER_URL, fetch_timeout_millis: 10_000, fetch_retries: 0, fetch_retry_backoff_min_millis: 500, fetch_retry_backoff_max_millis: 10_000, fetch_retry_backoff_scalar: 1.5, fetch_retry_timeout_millis: 10_000)","<p>@param [Boolean] debug Set to true to log some extra information to the console. @param [String] server_url …\n"],["new","Experiment::User","Experiment/User.html#method-c-new","(device_id: nil, user_id: nil, country: nil, city: nil, region: nil, dma: nil, language: nil, platform: nil, version: nil, os: nil, device_manufacturer: nil, device_brand: nil, device_model: nil, carrier: nil, library: nil, user_properties: nil)","<p>@param [String, nil] device_id Device ID for associating with an identity in Amplitude @param [String, …\n"],["new","Experiment::Variant","Experiment/Variant.html#method-c-new","(value, payload = nil)","<p>@param [String] value The value of the variant determined by the flag configuration @param [Object] payload …\n"],["to_json","Experiment::User","Experiment/User.html#method-i-to_json","(*options)",""],["README","","README_md.html","","<p>experiment-ruby-server\n<p>Need Help?\n<p>If you have any problems or issues over our SDK, feel free to create …\n"]]}}